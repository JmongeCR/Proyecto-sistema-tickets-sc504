-- Estado 1: Abierto
MERGE INTO TKT_ESTADO d
USING (SELECT 1 AS ID_ESTADO, 'Abierto' AS NOMBRE_ESTADO FROM dual) src
ON (d.ID_ESTADO = src.ID_ESTADO)
WHEN NOT MATCHED THEN
INSERT (ID_ESTADO, NOMBRE_ESTADO) VALUES (src.ID_ESTADO, src.NOMBRE_ESTADO);

-- Estado 2: Cerrado
MERGE INTO TKT_ESTADO d
USING (SELECT 2 AS ID_ESTADO, 'Cerrado' AS NOMBRE_ESTADO FROM dual) src
ON (d.ID_ESTADO = src.ID_ESTADO)
WHEN NOT MATCHED THEN
INSERT (ID_ESTADO, NOMBRE_ESTADO) VALUES (src.ID_ESTADO, src.NOMBRE_ESTADO);

-- Prioridad 1: Media
MERGE INTO TKT_PRIORIDAD p
USING (SELECT 1 AS ID_PRIORIDAD, 'Media' AS NIVEL_PRIORIDAD FROM dual) src
ON (p.ID_PRIORIDAD = src.ID_PRIORIDAD)
WHEN NOT MATCHED THEN
INSERT (ID_PRIORIDAD, NIVEL_PRIORIDAD) VALUES (src.ID_PRIORIDAD, src.NIVEL_PRIORIDAD);

-- Categoría 1: General
MERGE INTO TKT_CATEGORIA c
USING (SELECT 1 AS ID_CATEGORIA, 'General' AS NOMBRE_CATEGORIA FROM dual) src
ON (c.ID_CATEGORIA = src.ID_CATEGORIA)
WHEN NOT MATCHED THEN
INSERT (ID_CATEGORIA, NOMBRE_CATEGORIA) VALUES (src.ID_CATEGORIA, src.NOMBRE_CATEGORIA);

-- 2. Inserción del ticket de prueba
INSERT INTO TKT_TICKET (
    ASUNTO, DESCRIPCION, ID_USUARIO_CLIENTE, ID_ESTADO, ID_PRIORIDAD, ID_CATEGORIA
) VALUES (
    'Trigger Test', 'Vamos a probar el cambio de estado', 61, 1, 1, 1
);

-- 3. Actualización de estado para activar el trigger
UPDATE TKT_TICKET
SET ID_ESTADO = 2
WHERE ID_USUARIO_CLIENTE = 61
AND ROWNUM = 1;

-- 4. Verificación del resultado en la bitácora
SELECT * FROM TKT_BITACORA_ESTADO
ORDER BY FECHA_CAMBIO DESC;
